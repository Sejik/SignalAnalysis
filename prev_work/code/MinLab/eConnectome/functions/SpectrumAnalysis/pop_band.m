function varargout = pop_band(varargin)
% pop_band - the GUI for setting a frequency band.
%
% Usage: 
%            1. type 
%               >> band = pop_band
%               or call band = pop_band to start the popup GUI. 
%               Output: band - is the frequency band ([low, high]) set in the pop_band GUI. 
%           
%            2. type 
%               >> band2 = pop_band(band1)
%               or call band2 = pop_band(band1) to start the popup GUI. 
%               Input: band1 - is the default frequency band ([low, high]).
%               Output: band2 - is the frequency band ([low, high]) set in the pop_band GUI. 
%           
%            3. call band = pop_band or band2 = pop_band(band1) from the 
%                pop_psd GUI ('Context Menus -> Band Mapping').
%                The band will be used in the pop_psd GUI to visualize the 
%                spectrum band map over the scalp model.
%
% Program Author: Yakang Dai, University of Minnesota, USA
%
% User feedback welcome: e-mail: econnect@umn.edu
%

% License
% ==============================================================
% This program is part of the eConnectome.
% 
% Copyright (C) 2010 Regents of the University of Minnesota. All rights reserved.
% Correspondence: binhe@umn.edu
% Web: econnectome.umn.edu
%
% This program is free software for academic research: you can redistribute it and/or modify
% it for non-commercial uses, under the terms of the GNU General Public License as published by
% the Free Software Foundation, either version 3 of the License, or
% (at your option) any later version.
% 
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
% 
% You should have received a copy of the GNU General Public License
% along with this program. If not, see http://www.gnu.org/copyleft/gpl.html.
%
% This program is for research purposes only. This program
% CAN NOT be used for commercial purposes. This program 
% SHOULD NOT be used for medical purposes. The authors 
% WILL NOT be responsible for using the program in medical
% conditions.
% ==========================================

% Revision Logs
% ==========================================
%
% Yakang Dai, 01-Mar-2010 15:20:30
% Release Version 1.0 beta 
%
% ==========================================

% Begin initialization code - DO NOT EDIT
gui_Singleton = 0;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @pop_band_OpeningFcn, ...
                   'gui_OutputFcn',  @pop_band_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before pop_band is made visible.
function pop_band_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to pop_band (see VARARGIN)

% Choose default command line output for pop_band
% handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

len = length(varargin);
if len == 1
    frequency = varargin{1};
    set(handles.lowcutoffedit, 'string', num2str(frequency(1)));
    set(handles.highcutoffedit, 'string', num2str(frequency(2)));
else
    frequency = [];
    set(handles.lowcutoffedit, 'string', '');
    set(handles.highcutoffedit, 'string', '');    
end

set(hObject, 'userdata', frequency);

% UIWAIT makes pop_band wait for user response (see UIRESUME)
uiwait(hObject);% To block OutputFcn so that let other callbacks to generate values.

% --- Outputs from this function are returned to the command line.
% Executed after the OpeningFcn is finished.
function varargout = pop_band_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Output values generated by callbacks
varargout{1} = get(hObject, 'userdata');
delete(hObject);

% --- Executes when uipanel1 is resized.
function uipanel1_ResizeFcn(hObject, eventdata, handles)
% hObject    handle to uipanel1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


function lowcutoffedit_Callback(hObject, eventdata, handles)
% hObject    handle to lowcutoffedit (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of lowcutoffedit as text
%        str2double(get(hObject,'String')) returns contents of lowcutoffedit as a double


% --- Executes during object creation, after setting all properties.
function lowcutoffedit_CreateFcn(hObject, eventdata, handles)
% hObject    handle to lowcutoffedit (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function highcutoffedit_Callback(hObject, eventdata, handles)
% hObject    handle to highcutoffedit (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of highcutoffedit as text
%        str2double(get(hObject,'String')) returns contents of highcutoffedit as a double


% --- Executes during object creation, after setting all properties.
function highcutoffedit_CreateFcn(hObject, eventdata, handles)
% hObject    handle to highcutoffedit (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in tofilter.
function tofilter_Callback(hObject, eventdata, handles)
% hObject    handle to tofilter (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

hfig = gcf;
uiresume(hfig); % Resume the execution that uiwait suspended.

% Judge the validity of the input values.
[lowcutoff status1] = str2num(get(handles.lowcutoffedit, 'string'));
[highcutoff status2] = str2num(get(handles.highcutoffedit, 'string'));
if status1 == 0 | status2==0
    helpdlg('The frequency band is not correct!');
    return;
end

if lowcutoff < 0
    lowcutoff = 0;
end

if highcutoff < 0
    highcutoff = 0;
end

if lowcutoff > highcutoff
    helpdlg('Low frequency is higher than high frequency!');
    return;
end

frequency = [lowcutoff, highcutoff];
set(hfig, 'userdata', frequency);

% --- Executes on button press in cancelfilter.
function cancelfilter_Callback(hObject, eventdata, handles)
% hObject    handle to cancelfilter (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

set(gcf, 'userdata', []);
uiresume(gcf);

% --- Executes when user attempts to close setband.
function setband_CloseRequestFcn(hObject, eventdata, handles)
% hObject    handle to setband (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

set(gcf, 'userdata', []);
uiresume(gcf);
% Hint: delete(hObject) closes the figure


% --- Executes on button press in thetawave.
function thetawave_Callback(hObject, eventdata, handles)
% hObject    handle to thetawave (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of thetawave

set(handles.lowcutoffedit, 'string', '4');
set(handles.highcutoffedit, 'string', '7');


% --- Executes on button press in deltawave.
function deltawave_Callback(hObject, eventdata, handles)
% hObject    handle to deltawave (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of deltawave

set(handles.lowcutoffedit, 'string', '0.1');
set(handles.highcutoffedit, 'string', '4');


% --- Executes on button press in alphawave.
function alphawave_Callback(hObject, eventdata, handles)
% hObject    handle to alphawave (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of alphawave

set(handles.lowcutoffedit, 'string', '8');
set(handles.highcutoffedit, 'string', '12');


% --- Executes on button press in betawave.
function betawave_Callback(hObject, eventdata, handles)
% hObject    handle to betawave (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of betawave

set(handles.lowcutoffedit, 'string', '12');
set(handles.highcutoffedit, 'string', '30');


% --- Executes on button press in gammawave.
function gammawave_Callback(hObject, eventdata, handles)
% hObject    handle to gammawave (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of gammawave

set(handles.lowcutoffedit, 'string', '30');
set(handles.highcutoffedit, 'string', '100');


% --- Executes on button press in bandepoch.
function bandepoch_Callback(hObject, eventdata, handles)
% hObject    handle to bandepoch (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of bandepoch

frequency = get(gcf, 'userdata');
if isempty(frequency)
    set(handles.lowcutoffedit, 'string', '');
    set(handles.highcutoffedit, 'string', '');
else
    set(handles.lowcutoffedit, 'string', num2str(frequency(1)));
    set(handles.highcutoffedit, 'string', num2str(frequency(2)));
end
