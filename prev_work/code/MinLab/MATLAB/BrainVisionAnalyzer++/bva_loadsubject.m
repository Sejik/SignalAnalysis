function varargout = bva_loadsubject(varargin)

%bva_loadsubject - load Brain Vision dataset of a subject
%
% function [eeg meta] = bva_loadsubject(dataFile,headerFile,markerFile,stimCode,t0,t1 [,responseCode])
%
% Read continuous Brain Vision header, marker and datafile 
% and epochize data according to requested stimulus code.
% with a choose pre- & post-stimulus interval. A response
% code may also be given. If such a code is given all "incorrect trials"
% will be discarded and thecorresponding reaction times will be computed.
%
%
% Input:
%	dataFile = cont. Brain Vision data (.mat Array [channel x time])
%	headerFile = Brain Vision Data Exchange Header File (.vhdr)
%	markerFile = Brain Vision Data Exchange Marker File (.vmrk)
%	stimCode = relevant trigger code (number)
%	t0 = pre-stimulus interval
%	t1 = post-stimulus interval
%	response = correct response code (optional)
%
% Output:
%	eeg = eeg-set (channel x time x trial)
%	meta = struct containing sampling rate,timescale and electrode lables
% 	rt = reaction times - only if response given. 
%
% requires: bva_epoch.m, bva_readheader.m bva_readmarker.m
%
% see also:ERRP/io
%

% Copyright (C) 2008-2012 Stefan Schinkel, HU Berlin
% http://people.physik.hu-berlin.de/~schinkel/

%
% This program is free software; you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation; either version 3 of the License, or
% (at your option) any later version.
%
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with this program.  If not, see <http://www.gnu.org/licenses/>.

% $Log $

%% debug settings
debug = 0;
if debug;warning('on','all');else warning('off','all');end

%% check number of input arguments
error(nargchk(0,7,nargin))

%% check number of out arguments
error(nargoutchk(0,3,nargout))

if length(varargin)  < 6
	
	varargin{8} = [];

	% get params from GUI
	params = helper_dialog(varargin);

	if isempty(params);
		warning('ERRP:io:bva_loadsubject:inputCancelled','User input cancelled.');
		varargout{1} = [];varargout{2} = []; return
	end
	
	% check
	if isempty(params{1});error('Provide Data File');else dataFile = params{1};end
	if isempty(params{2});error('Provide Header File');else headerFile = params{2};end
	if isempty(params{3});error('Provide Marker File');else markerFile = params{3};end

	if isempty(params{4});error('Provide Stimulus code');else stimCode = str2double(params{4});end
	if isempty(params{5});error('Provide Prestimulus Interval');else t0 = -abs(str2double(params{5}));end
	if isempty(params{6});error('Provide Poststimulus Interval');else t1 = str2double(params{6});end
	
	% the response code is optional
	if ~isempty(params{7}); response = str2double(params{7});else response = [];end

else
	varargin{8} = [];
	dataFile = varargin{1};	
	headerFile = varargin{2};
	markerFile = varargin{3};
	stimCode = varargin{4};
	t0 = -(abs(varargin{5}));
	t1 = varargin{6};
	response = varargin{7};
end

%% read header for samprate & elecs
[sampRate labels chans] = bva_readheader(headerFile);

%% read marker for triggers
trigger = bva_readmarker(markerFile);


%% load cnt-data
t = struct2cell(load(dataFile));
cntData = t{1};

%%Olaf transposes the matrices for some reason
if size(cntData,1) > size(cntData,2)
	cntData = cntData';
end

%% epoch data 
[ eeg rt ] = bva_epoch(cntData,trigger,stimCode,t0,t1,sampRate,response);

% store metadata
meta.sampRate = sampRate;
meta.timeScale = t0:1/sampRate*1000:t1;
meta.elecs = labels;

%return
varargout{1} = eeg;
varargout{2} = meta;
varargout{3} = rt;
end % main


function params = helper_dialog(cmdArgs)
	
	%% init GUI
%	helperLayout;
	screenSize = get(0,'Screensize');

	figHandle = figure('Name','Import BVA Data',... 
			'Position',[50,screenSize(4)-650,250,400],... 
			'Color',[.801 .75 .688],... 
			'NumberTitle','off',...
			'Tag','mainFigure',... 
			'WindowStyle','modal',...
			'Visible','off',...
			'Menubar','none');

	textDataFile = uicontrol('Parent',figHandle, ...
			'Units', 'normalized', ...
			'Position', [.05 .9 .8 .05],...
			'BackgroundColor',[.801 .75 .688], ...
			'Style','text',... 
			'String','Select data file:',...
			'FontWeight','bold',...
			'HorizontalAlignment','left',...
			'Visible','on');
	inputDataFile = uicontrol('Parent',figHandle, ...
			'Units', 'normalized', ...
			'Position', [.05 .85 .6 .05],...
			'BackgroundColor',[0.7020 0.7020 0.7020], ...
			'Style','edit',... 
			'String','path/to/file',...
			'Tag','dataFile',...
			'HorizontalAlignment','left',...
			'Visible','on');
	buttonBrowseDataFile = uicontrol('Parent',figHandle, ...
			'Units', 'normalized', ...
			'Position', [.7 .85 .25 .05],...
			'BackgroundColor',[0.7020 0.7020 0.7020], ...
			'Style','pushbutton',... 
			'String','browse',...
			'HorizontalAlignment','left',...
			'Visible','on');

	textHeaderFile = uicontrol('Parent',figHandle, ...
			'Units', 'normalized', ...
			'Position', [.05 .8 .8 .05],...
			'BackgroundColor',[.801 .75 .688], ...
			'Style','text',... 
			'String','Select header file:',...
			'FontWeight','bold',...
			'HorizontalAlignment','left',...
			'Visible','on');
	inputHeaderFile = uicontrol('Parent',figHandle, ...
			'Units', 'normalized', ...
			'Position', [.05 .75 .6 .05],...
			'BackgroundColor',[0.7020 0.7020 0.7020], ...
			'Style','edit',... 
			'String','path/to/file',...
			'Tag','headerFile',...
			'HorizontalAlignment','left',...
			'Visible','on');
	buttonBrowseHeaderFile = uicontrol('Parent',figHandle, ...
			'Units', 'normalized', ...
			'Position', [.7 .75 .25 .05],...
			'BackgroundColor',[0.7020 0.7020 0.7020], ...
			'Style','pushbutton',... 
			'String','browse',...
			'HorizontalAlignment','left',...
			'Visible','on');

	textMarkerFile = uicontrol('Parent',figHandle, ...
			'Units', 'normalized', ...
			'Position', [.05 .7 .8 .05],...
			'BackgroundColor',[.801 .75 .688], ...
			'Style','text',... 
			'String','Select marker file:',...
			'FontWeight','bold',...
			'HorizontalAlignment','left',...
			'Visible','on');
	inputMarkerFile = uicontrol('Parent',figHandle, ...
			'Units', 'normalized', ...
			'Position', [.05 .65 .6 .05],...
			'BackgroundColor',[0.7020 0.7020 0.7020], ...
			'Style','edit',... 
			'String','path/to/file',...
			'Tag','markerFile',...
			'HorizontalAlignment','left',...
			'Visible','on');
	buttonBrowseMarkerFile = uicontrol('Parent',figHandle, ...
			'Units', 'normalized', ...
			'Position', [.7 .65 .25 .05],...
			'BackgroundColor',[0.7020 0.7020 0.7020], ...
			'Style','pushbutton',... 
			'String','browse',...
			'HorizontalAlignment','left',...
			'Visible','on');

	textStimCode = uicontrol('Parent',figHandle, ...
			'Units', 'normalized', ...
			'Position', [.05 .55 .7 .05],...
			'BackgroundColor',[.801 .75 .688], ...
			'Style','text',... 
			'String','Stimulus Code:',...
			'FontWeight','bold',...
			'HorizontalAlignment','left',...
			'Visible','on');
	inputStimCode = uicontrol('Parent',figHandle, ...
			'Units', 'normalized', ...
			'Position', [.8 .55 .15 .05],...
			'BackgroundColor',[0.7020 0.7020 0.7020], ...
			'Tag','stimCode',...
			'Style','edit',... 
			'HorizontalAlignment','left',...
			'Visible','on');

	textPre = uicontrol('Parent',figHandle, ...
			'Units', 'normalized', ...
			'Position', [.05 .45 .7 .05],...
			'BackgroundColor',[.801 .75 .688], ...
			'Style','text',... 
			'String','Pre-stimulus interval (ms):',...
			'FontWeight','bold',...
			'HorizontalAlignment','left',...
			'Visible','on');
	inputPre = uicontrol('Parent',figHandle, ...
			'Units', 'normalized', ...
			'Position', [.8 .45 .15 .05],...
			'Tag','pre',...
			'BackgroundColor',[0.7020 0.7020 0.7020], ...
			'Style','edit',... 
			'HorizontalAlignment','left',...
			'Visible','on');

	textPost = uicontrol('Parent',figHandle, ...
			'Units', 'normalized', ...
			'Position', [.05 .35 .7 .05],...
			'BackgroundColor',[.801 .75 .688], ...
			'Style','text',... 
			'String','Post-stimulus interval (ms):',...
			'FontWeight','bold',...
			'HorizontalAlignment','left',...
			'Visible','on');
	inputPost = uicontrol('Parent',figHandle, ...
			'Units', 'normalized', ...
			'Position', [.8 .35 .15 .05],...
			'Tag','post',...
			'BackgroundColor',[0.7020 0.7020 0.7020], ...
			'Style','edit',... 
			'HorizontalAlignment','left',...
			'Visible','on');

	textResponse = uicontrol('Parent',figHandle, ...
			'Units', 'normalized', ...
			'Position', [.05 .25 .7 .05],...
			'BackgroundColor',[.801 .75 .688], ...
			'Style','text',... 
			'String','Correct Response Code',...
			'FontWeight','bold',...
			'HorizontalAlignment','left',...
			'Visible','on',...
			'Tooltip','The stimuluscode for a correct response (optional)');
	inputResponse = uicontrol('Parent',figHandle, ...
			'Units', 'normalized', ...
			'Position', [.8 .25 .15 .05],...
			'BackgroundColor',[0.7020 0.7020 0.7020], ...
			'Tag','response',...
			'Style','edit',... 
			'HorizontalAlignment','left',...
			'Visible','on',...
			'Tooltip','The stimuluscode for a correct response (optional)');

	buttonCancel = uicontrol('Parent',figHandle, ...
			'Units', 'normalized', ...
			'Position', [.4 .15 .3 .05],...
			'BackgroundColor',[0.7020 0.7020 0.7020], ...
			'Style','pushbutton',... 
			'String','Cancel',...
			'Callback','close(gcbf)',...
			'HorizontalAlignment','left',...
			'Visible','on');
	buttonOK = uicontrol('Parent',figHandle, ...
			'Units', 'normalized', ...
			'Position', [.75 .15 .2 .05],...
			'BackgroundColor',[0.7020 0.7020 0.7020], ...
			'Style','pushbutton',... 
			'String','OK',...
			'Callback','uiresume(gcbf)',...
			'HorizontalAlignment','left',...
			'Visible','on');

	textNLD = uicontrol('Parent',figHandle,...
			'Units', 'normalized', ...
			'Position',[.1 .01 .98 .1],...
			'Style','text',... 
			'BackgroundColor',[.801 .75 .688], ... 
			'Tag', 'NLD ',...
			'FontSize',9,...
			'String',sprintf('Stefan Schinkel \nHU Berlin (c) 2008-%s',datestr(now,'yy')),...
			'ToolTip','Stefan Schinkel http://people.physik.hu-berlin.de/~schinkel/',...
			'HorizontalAlignment','left');
		
	set(buttonBrowseDataFile,'Callback',{@buttonBrowseDataFileCallback});
	set(buttonBrowseHeaderFile,'Callback',{@buttonBrowseHeaderFileCallback});
	set(buttonBrowseMarkerFile,'Callback',{@buttonBrowseMarkerFileCallback});

	movegui(figHandle,'center');
	set(figHandle,'Visible','on');

	% cmdArgs
	set(findobj(figHandle,'Tag','dataFile'),'String',cmdArgs{1});
	set(findobj(figHandle,'Tag','headerFile'),'String',cmdArgs{2});
	set(findobj(figHandle,'Tag','markerFile'),'String',cmdArgs{3});
	set(findobj(figHandle,'Tag','stimCode'),'String',cmdArgs{4});
	set(findobj(figHandle,'Tag','pre'),'String',cmdArgs{5});		
	set(findobj(figHandle,'Tag','post'),'String',cmdArgs{6});
	set(findobj(figHandle,'Tag','response'),'String',cmdArgs{7});
	


	%% read data from GUI

	uiwait(figHandle);
	if ~ishandle(figHandle);
		params ={};
	else
		params{1} = get(findobj(figHandle,'Tag','dataFile'),'String');
		params{2} = get(findobj(figHandle,'Tag','headerFile'),'String');
		params{3} = get(findobj(figHandle,'Tag','markerFile'),'String');
		params{4} = get(findobj(figHandle,'Tag','stimCode'),'String');
		params{5} = get(findobj(figHandle,'Tag','pre'),'String');		
		params{6} = get(findobj(figHandle,'Tag','post'),'String');
		params{7} = get(findobj(figHandle,'Tag','response'),'String');
		close(figHandle);
		drawnow;
	end
	

end %helper_dialog

%% callbacks

function buttonBrowseDataFileCallback(source,eventdata)
	
	figHandle = get(source,'Parent');

	[dataName, dataPath] = uigetfile( {'*.mat'}, 'Choose data file to open');
	dataFile = [dataPath dataName];
	if length(dataFile) > 3;
 		set(findobj(figHandle,'Tag','dataFile'),'string',dataFile)
	else
		return
	end
end %buttonBrowseDataFileCallback


function buttonBrowseHeaderFileCallback(source,eventdata)

	figHandle = get(source,'Parent');

	[dataName, dataPath] = uigetfile( {'*.vhdr'}, 'Choose header file to open');
	dataFile = [dataPath dataName];
	if length(dataFile) > 3;
 		set(findobj(figHandle,'Tag','headerFile'),'string',dataFile)
	else
		return
	end
end %buttonBrowseHeaderFileCallback

function buttonBrowseMarkerFileCallback(source,eventdata)

	figHandle = get(source,'Parent');

	[dataName, dataPath] = uigetfile( {'*.vmrk'}, 'Choose maker file to open');
	dataFile = [dataPath dataName];
	if length(dataFile) > 3;
 		set(findobj(figHandle,'Tag','markerFile'),'string',dataFile)
	else
		return
	end
end %buttonBrowseMarkerFileCallback

