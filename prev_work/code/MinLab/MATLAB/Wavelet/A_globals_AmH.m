function [	fullPATH, Regulation,											...
			channame, removech, dataname, trialname, subname				...
			Freqs, fName, m, ki, cedPATH	]	=	A_globals_AmH( )
%--------------------------------------------------------------------------------
%% 각 m 파일들이 사용하는 전역변수를 공유하도록 구성한다.
%--------------------------------------------------------------------------------

global	NUMWORKERS;			%define global var for parallel tool box!!

NUMWORKERS	=	20;
%fullPATH	=	'/home/minlab/PLV_theta';
%fullPATH	=	'/home/minlab/SKK/skk';
fullPATH	=	'/home/min/SKK';
%Regulation	=	'ArtifactRejection';
Regulation	=	'_';
channame	={	'Fp1',	'Fp2',	'F7',	'F3',	'Fz',	'F4',	'F8',	'FC5',...
				'FC1',	'FC2',	'FC6',	'T7',	'C3',	'Cz',	'C4',	'T8', ...
				'EOG',	'CP5',	'CP1',	'CP2',	'CP6',			'P7',	'P3', ...
				'Pz',	'P4',	'P8',	'PO9',	'O1',	'Oz',	'O2',	'PO10' };
removech	={	'NULL' };	%제거할 채널

%dataname	={	'Fav', 'Neutral', 'Unfav'};
%trialname	={	'_like', '_dislike'};
%{
			'FAHD'		'MAHD'		'UAHD'
			'FAHL'		'MAHL'		'UAHL'
			'FAID'		'MAID'		'UAID'
			'FAIL'		'MAIL'		'UAIL'
			'FSHD'		'MSHD'		'USHD'
			'FSHL'		'MSHL'		'USHL'
			'FSID'		'MSID'		'USID'
			'FSIL'		'MSIL'		'USIL'
%}
dataname	={	'FA', 'FS', 'MA', 'MS', 'UA', 'US',	};
trialname	={	'HD', 'HL', 'ID', 'IL',	};

% subname: 피험자 리스트. Outlier가 생길 경우 이 리스트에서도 빼줄 것.
%{
			% type 1	%-[
subname		={	'su01_1',				...
				'su02_1',				...
				'su04_1',				...
				'su06_1',				...
				'su07_1',				...
				'su08_1',				...
				'su10_1',				...
				'su11_1',				...
				'su12_1',				...
				'su15_1',				...
				'su16_1',				...
				'su20_1',				...
				'su22_1',				...
				'su23_1',				...
				'su25_1',				...
				'su26_1',				...
				'su28_1',		};	%-]
				% type 2 : 하나의 subject가 여러 source 로 분할된 경우	%-[
subname		={																...
				{ 'su01', 'su01_1'				},							...
				{ 'su02', 'su02_1', 'su02_2', },							...
				{ 'su04', 'su04_1', 'su04_2', },							...
				{ 'su06', 'su06_1', 'su06_2', },							...
				{ 'su07', 'su07_1', 'su07_2', },							...
				{ 'su08', 'su08_1', 'su08_2', },							...
				{ 'su10', 'su10_1', 'su10_2', },							...
				{ 'su11', 'su11_1', 'su11_2', },							...
				{ 'su12', 'su12_1', 'su12_2', },							...
				{ 'su15', 'su15_1', 'su15_2', },							...
				{ 'su16', 'su16_1', 'su16_2', },							...
				{ 'su20', 'su20_1', 'su20_2', },							...
				{ 'su22', 'su22_1', 'su22_2', },							...
				{ 'su23', 'su23_1', 'su23_2', },							...
				{ 'su25', 'su25_1', 'su25_2', },							...
				{ 'su26', 'su26_1', 'su26_2', },							...
				{ 'su28', 'su28_1', 'su28_2', },							...
			};	%-]
%}
subname		={																...
			{ 'su01',		'skk_su01',									},	...
			{ 'su02',		'skk_su02',		'skk_su02_2',				},	...
			{ 'su04',		'skk_su04',		'skk_su04_2',				},	...
			{ 'su06',		'skk_su06',		'su06_2',					},	...
			{ 'su07',		'skk_su07',		'su_07_2',					},	...
			{ 'su08',		'su08',			'su08_02',		'su_08_3',	},	...
			{ 'su10',		'su_10',		'su10_1',		'su10_2',	},	...
			{ 'su11',		'su_11',		'skk_su11_2',				},	...
			{ 'su12',		'skk_su12',		'skk_su12_2',				},	...
			{ 'su15',		'skk_su15_1',	'skk_su15_2',				},	...
			{ 'su16',		'skk_su16',		'skk_su16_2',				},	...
			{ 'su20',		'akk_su20',		'skk_su20_2',				},	...
			{ 'su22',		'skk_su22',		'skk_su22_2',				},	...
			{ 'su23',		'skk_su23',		'skk_su23_2',				},	...
			{ 'su25',		'skk_su25',		'skk_su25_2',				},	...
			{ 'su26',		'skk_su26',		'skk_su26_2',				},	...
			{ 'su28',		'skk_su28',		'skk_su28_2',				},	...
			{ 'su31',		'skk_su31_1',								},	...
			{ 'su32',		'skk_su32',									},	...
			};

%Freqs		={	4:1/2:8, 8:1/2:12	};		% multi band을 잡는다: step 0.5
Freqs		={	4:1/2:8,	};				% 세타 대역을 잡는다: step 0.5

fName		=AmHlib_get_freqname(Freqs);	% 주파수 대역의 이름을 식별
m	=	7;	ki	=	5;				% wavelet 분석을 위한 default 값

cedPATH		=	{	...
					['/home/minlab/MATLAB/EEG_30chan.ced']					...
					['/home/minlab/MATLAB/EEG_30chan_interp.ced'],			...
				};
% 1번 ced: topo 용 ced (not used 채널 정보 배제됨)
% 2번 ced: interpolation 용 ced (not used 채널 정보도 있어야 interp 수행 가능)

return
